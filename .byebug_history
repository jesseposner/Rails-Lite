c
image_file
c
req.cookies["flash"].nil?
req.cookies["flash"]
c
@source_code[21][0..-2]
@source_code[21][-1]
@source_code[21]
@source_code[21].drop(1)
@source_code[21]
@source_code[0]
@source_code[21]
@source_code[22]
@source_code
c
@source_code
c
@error.backtrace.first.class
@error.backtrace.first
@error.backtrace
@error
c
res
@app.call(env)
@app
env
headers
res
n
res
n
res
n
c
n
s
res
c
res
env
c
flash["test"]
flash
flash[:test]
flash
c
flash[:test]
c
flash[:test]
c
flash[:test]
c
res.cookies["_rails_lite_app"]
res.cookies
req.cookies["_rails_lite_app"]
res
res.cookies
res
c
display cookie_attributes
cookie_attributes
c
cookie_attributes
c
cookie_attributes
c
cookie_attributes
c
match_data = @pattern.match(req.path).names
match_data = @pattern.match(req.path)
@pattern.match(req.path)
@pattern.match("/users/42")
@pattern.match(req.path)
@pattern
@path
req.params
req.body
req.path
req.methods - Object.methods
req.methods - object.methods
req
@pattern.match("users")
@pattern.match
@pattern.class
@pattern
c
self.instance_eval(&proc)
self.instance_eval(proc)
get
proc.call
proc.inspect
proc
&proc
proc.call
proc
@controller_class.new
@controller_class
res
req
self
c
@routes
req
c
@routes.first.matches?(req)
@routes.first
@routes.first.pattern
@routes.first
@routes
req.request_method
req.path
req
self.get
@routes
get
c
self.methods - Class.new.methods
pattern
@pattern
self
self.put
self.post
self.routes
self.get
self.routes
:routes
:get
self :get
self.methods - Class.new.methods
:post
:get
self.get
self.:get
self
@routes
req
c
@pattern =~ req.path
http_method == req.request_method.downcase.to_sym
req.request_method.downcase.to_sym
req.request_method
http_method.class
http_method.drop(1)
http_method
pattern =~ req.path
pattern =~ "/dog"
pattern =~ req.path
req.request_method
req.path
req
action_name
controller_class
http_method
pattern
c
res
res.cookies
res.set_cookie("_rails_lite_app", cookie_attributes)
cookie_attributes
cookie_attributes[:value] = json_cookie
cookie_attributes[:path] = "/"
cookie_attributes = {}
res.set_cookie("_rails_lite_app", cookie_hash_with_path)
cookie_hash_with_path
cookie_hash_with_path["/"] = json_cookie
cookie_hash_with_path = {}
json_cookie = JSON.generate(@cookie)
res.set_cookie(blah, blah)
res.set_cookie
res
JSON.generate(@cookie)
JSON.methods - Object.methods
JSON.parse(@cookie)
@cookie
c
JSON.parse(req.cookies["_rails_lite_app"])
JSON.new(req.cookies["_rails_lite_app"])
JSON.parse(req.cookies["_rails_lite_app"]
_
req.cookies["_rails_lite_app"]
JSON.parse(req.cookies)
req.cookies
req
c
template.result(binding)
template.result
template = ERB.new(file_content)
file_content = File.read(file_path)
template = ERB.new(file_content)
File.read(file_path)
File.reader(file_path)
file_path
file_path = "views/#{self.class.to_s.underscore}/#{template_name}.html.erb"
template_name
self.class.to_s.underscore
self.class.to_s
self.class.underscore
res
req
self.class
self
controller_name
File.read("views/cats_controller/index.html.erb")
File.read("./views/cats_controller/index.html.erb")
File.read("/views/cats_controller/index.html.erb")
File.read("/views/index.html.erb")
File.read("index.html.erb")
File.read(index.html.erb)
File.read(index.html.erb_
File.read
/
res
req
template_name
c
res.header["location"]
res.header
res.status
res["header"]
res.fdafsd
res.header
res
url
c
req.env["PATH_INFO"]
req.env["PATH_NAME"]
req.env
req["PATH_INFO"]
req
n
params
c
params
n
res
n
res
n
req
env
res
n
req
n
